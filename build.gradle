plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.21'
    id "com.github.johnrengelman.shadow" version "4.0.4"
}

apply plugin: 'kotlin'

group 'com'
version '1.0'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}


dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testCompile group: 'junit', name: 'junit', version: '4.12'

    compile("org.jetbrains.kotlin:kotlin-stdlib:1.3.21")

    // Programaci√≥n reactiva
    compile "io.reactivex.rxjava2:rxkotlin:2.3.0"

    // Habilitamos las coroutinas
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1"
    
    // https://mvnrepository.com/artifact/tech.tablesaw/tablesaw-core
    compile group: "tech.tablesaw", name: "tablesaw-core", version: "0.32.7"

    // Utiles de la libreria KFoot
    compile fileTree(dir: 'libs/KFootUtils', include: '*.jar')
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

/* ----- MUY IMPORTANTE ----- */
sourceSets {
    main.java.srcDirs += 'src/main/kotlin/'
    test.java.srcDirs += 'src/test/kotlin/'
}

// Copy dependencies to 'lib' directory, as Netbeans usually did
task copyToLib(type: Copy) {
    from configurations.compile
    from configurations.runtime

    //into "$buildDir/libs/"          // Copia las dependencias directamente a 'libs', donde se produce el jar
    into "$buildDir/output/KFootLib"
}

//   Using dependency list to generate a manifest with appropriate classpath
jar {
    dependsOn copyToLib
    /*manifest {
        attributes 'Class-Path' : configurations.compile.collect { 'lib/' + it.getName() }.join(' ')
    }
    from("$buildDir/libs/lib") {
        into ("lib/")
    }*/
    //from configurations.compile.collect { fileTree(dir: "$buildDir/libs/lib") }
    destinationDir = file("$buildDir/output/KFootLib")
}
/* --------------------------- */